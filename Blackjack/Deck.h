#ifndef DECK_H
#define DECK_H

#include "Card.h"
#include <vector>

enum class DeckType
{
	StandardNoJoker,
};

//---------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------

class BaseDeck
{
private:
	std::vector<Card> mCards;
public:

	std::vector <Card> GetCards() const;
	void AddCard(Card& val);
	Card* GetTopCard();
	void ShuffleDeck(int times = 1);
};

//---------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------

class StandardDeck : public BaseDeck
{
private:
public:
	StandardDeck();
	~StandardDeck() {};
};

//---------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------

class DeckFactory
{
public:
	DeckFactory() = default;
	BaseDeck* CreateDeck(DeckType deckType);
};

//---------------------------------------------------------------------------------------------------------------------
//---------------------------------------------------------------------------------------------------------------------
#endif // ifndef DECK_H
